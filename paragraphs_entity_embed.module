<?php

/**
 * @file
 * The paragraphs_entity_embed functionality.
 */

/**
 * Implements hook_entity_type_build().
 *
 * Adds a custom Form Class to Paragraph Embed entities, so we can add custom
 * actions and potentially override normal Entity CRUD operations.
 */
function paragraphs_entity_embed_entity_type_build(array &$entity_types) {
  if (isset($entity_types['embedded_paragraphs'])) {
    $entity_types['embedded_paragraphs']->setFormClass('paragraphs_entity_embed', 'Drupal\paragraphs_entity_embed\Form\ParagraphEmbedDialog');
  }
  if (isset($entity_types['node'])) {
    $entity_types['node']->setFormClass('paragraphs_entity_embed', 'Drupal\paragraphs_entity_embed\Form\Node');
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * On displaying the Paragraph Embed add/edit forms in iframe hide all page
 * elements except that what is inside the content area.
 */
function paragraphs_entity_embed_preprocess_html(&$variables) {
  if (
    !empty($variables['is_admin']) &&
    in_array(\Drupal::routeMatch()->getRouteName(), [
      'paragraphs_entity_embed.dialog',
      'paragraphs_entity_embed_edit.dialog',
    ])) {
    if (isset($variables['page_top'])) {
      $variables['page_top']['#access'] = FALSE;
    }
    if (isset($variables['page_bottom'])) {
      $variables['page_bottom']['#access'] = FALSE;
    }
    if (isset($variables['page'])) {
      foreach (array_keys($variables['page']) as $key) {
        if (strpos($key, '#') !== 0 && $key !== 'content') {
          $variables['page'][$key]['#access'] = FALSE;
        }
      }
    }
//    unset($variables['page_top']);
//    unset($variables['page_bottom']);
//    unset($variables['head_title']);
//    unset($variables['head_title_array']);
//    unset($variables['user']);
//    unset($variables['directory']);
     unset($variables['page']['header']);
     unset($variables['page']['content']['#sorted']);
//    unset($variables['page']['content']['thunder_admin_local_actions']);
//    unset($variables['page']['content']['thunder_admin_local_actions']);
    unset($variables['page']['pre_content']);
    unset($variables['page']['highlighted']);
//    unset($variables['html']);
//    unset($variables['attached']);
//    unset($variables['html_attributes']);
    unset($variables['page']['content']['thunder_admin_content']['#weight']);
    unset($variables['page']['#attached']['html_head']);
    unset($variables['page']['#attached']['drupalSettings']);
//    unset($variables['page']['content']['thunder_admin_content']['#configuration']);
    //var_dump(recursive_array_search('chakalakabaka', $variables['page']));exit;
  }
}

function recursive_array_search($needle, $haystack, $currentKey = '') {
  foreach($haystack as $key=>$value) {
    if (is_array($value)) {
      $nextKey = recursive_array_search($needle,$value, $currentKey . '[' . $key . ']');
      if ($nextKey) {
        return $nextKey;
      }
    }
    else if($value==$needle) {
      return is_numeric($key) ? $currentKey . '[' .$key . ']' : $currentKey . '["' .$key . '"]';
    }
  }
  return false;
}
